const{logger:logger}=require("../helpers/logger"),User=require("../models/user"),increaseApiCallAmount=(e,a=1)=>new Promise(async(r,l)=>{const n=await User.findOne({_id:e}),o=await User.find({CONSUMER_KEY:n.CONSUMER_KEY});await o.forEach(async e=>{await User.updateOne({_id:e.id},{"API_call_amount.daily":e.API_call_amount.daily+a,"API_call_amount.total":e.API_call_amount.total+a},(e,o)=>{e?(logger.error(`Incrementing API call amount for user ${n.email} gave error, err: ${e.message}`),l(e)):(logger.info(`Incremented API call amount for user ${n.email} to ${n.API_call_amount.daily+a}`),r(o))})})}),hasUserExceededAPiAmount=async(e,a)=>{return(await User.findOne({_id:e})).API_call_amount.daily>=5e3-a&&(logger.error("user has exceeded api call amount"),!0)};function sleep(e){return new Promise(a=>setTimeout(a,e))}module.exports={increaseApiCallAmount:increaseApiCallAmount,hasUserExceededAPiAmount:hasUserExceededAPiAmount};